name: Android CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Run Tests
        run: bash ./gradlew test --stacktrace  
  build:
    if: ${{ github.event.head_commit.message == 'RELEASE' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      name: checkout code
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Build APK
      run: bash ./gradlew assembleDebug --stacktrace
    - name: Upload APK
      uses: actions/upload-artifact@v1
      with:
        name: apk
        path: app/build/outputs/apk/debug/app-debug.apk
  release:
    name: Release APK
    needs: build
    #if: startsWith(github.ref, 'refs/tags/v')
    if: ${{ github.event.head_commit.message == 'RELEASE' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk
      - name: Compute version
        run: |
          num_minor=$(git log --grep ^MINOR_RELEASE$ --oneline | wc -l)
          num_major=$(git log --grep ^MAJOR_RELEASE$ --oneline | wc -l)
          num_revision=$(git log --grep ^REVISION_RELEASE$ --oneline | wc -l)
          VERSION=$(echo $num_major.$num_minor.$num_revision) >> "$GITHUB_OUTPUT"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ VERSION }}
          #tag_name: 1.0
          release_name: Release ${{ VERSION }}
          #release_name: Release 1.0
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: Sbobinator9000.apk
          asset_content_type: application/zip
